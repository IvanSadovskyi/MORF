@use '../abstracts' as *;

.row {
    display: flex;
    flex-wrap: wrap;
    & > div:last-child{
        margin-bottom: 0 !important;
    }

    &-m16{
        @include breakpoint(tablet, min){
            margin-left: -16px;
            margin-right: -16px;
        }

        & > div{
            padding-left: 16px;
            padding-right: 16px;
            margin-bottom: 16px;
        }
    }
    &-m32{
        @include breakpoint(laptop, min){
            margin-left: -32px;
            margin-right: -32px;
        }

        @include breakpoint(laptop){
            margin-left: -16px;
            margin-right: -16px;
        }
        @include breakpoint(mobile1){
            margin-left: -8px;
            margin-right: -8px;
        }

        & > div{
            padding-left: 32px;
            padding-right: 32px;
            margin-bottom: 32px;
        }
    }
    &-m48{
        @include breakpoint(tablet, min){
            margin-left: -48px;
            margin-right: -48px;
            @include breakpoint(laptop){
                margin-left: -32px;
                margin-right: -32px;
            }

            & > div{
                padding-left: 48px;
                padding-right: 48px;
                margin-bottom: 96px;
                @include breakpoint(laptop){
                    padding-left: 32px;
                    padding-right: 32px;
                }
            }
        }
        & > div{
            margin-bottom: 64px;
            flex-shrink: 1 !important;
        }
    }
    &-g64{
        gap: 64px;

        & > div{
            flex-shrink: 1 !important;
        }
    }
    &-g96{
        gap:96px;

        @include breakpoint(laptop){
            gap: 64px;
        }
        @include breakpoint(tablet){
            gap: 32px;
        }
        @include breakpoint(mobile1){
            gap: 16px;
        }
        & > div{
            flex-shrink: 1 !important;
        }
    }
    &-g128{
        gap: 128px;
        @include breakpoint(tablet){
            gap:64px;
            & > div{
                gap:64px
            }
        }
        & > div{
            flex-shrink: 1 !important;
        }
    }
    &-nw{
        flex-wrap: nowrap;
    }

}

.col-1-2-3-4 {
    flex: 0 0 100%;
    max-width: 100%;
    
    @include breakpoint(mobile1, min){
        margin-bottom: 32px;
        flex: 0 0 50%;
        max-width: 50%;
    }
    @include breakpoint(laptop, min){
        flex: 0 0 33.33333%;
        max-width: 33.33333%;
    }
    @include breakpoint(desktop2, min){
        flex: 0 0 25%;
        max-width: 25%;
        
    }
}


.col-1-2-3 {
    flex: 0 0 100%;
    max-width: 100%;

    @include breakpoint(tablet, min){
        flex: 0 0 50%;
        max-width: 50%;
    }
    @include breakpoint(desktop2, min){
        flex: 0 0 33.33333%;
        max-width: 33.33333%;
    }
    @include breakpoint(tablet, min){
        &:nth-last-child(-n+3){
            margin-bottom: 0 !important;
        }
    }
}


.col-1-2 {
    flex: 0 0 100%;
    max-width: 100%;

    @include breakpoint(tablet, min){
        flex: 0 0 50%;
        max-width: 50%;
    }
    @include breakpoint(tablet, min){
        &:nth-last-child(-n+2){
            margin-bottom: 0 !important;
        }
    }
}
.col-1{
    flex: 0 0 100%;
    max-width: 100%;
}
.col-1-1-2{
    // flex: 0 0 100%;
    width: 100%;
    display: flex;
    gap: 96px;

    @include breakpoint(mobile1){
        gap:64px;
    }
    @include breakpoint(mobile2){
        gap:32px;
    }
    @include breakpoint(tablet, min){
        & > div{
            width: 50%;
        }
    }
}

.col-row{
    display: flex;
    flex-direction: column;

    @include breakpoint(mobile1){
        & > div{
            flex-direction: column;
            & > div{
                width: 100%;
            }
        }
    }
}





.illustration{
    position: relative;
    &__wrap{
        width: 410px;
        height: 410px;
        margin: 0 auto;
    }
    &__wrap > img, &__background{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    &__wrap > img{
        z-index: 2;
    }
    &__background{
        z-index: 1;
        width: 100%;
        display: flex;
        & > img{
            margin: 0 auto;
        }
    }
    @include breakpoint(tablet){
        flex: none !important;
        max-width: none !important;
    }
    @include breakpoint(mobile1){
        &__wrap{
            max-width: 340px;
            width: 100%;
            height: 380px;
            margin: 0 auto;
        }
    }
}



$container-size: 500px;
$pad: 50px;
$num-shapes: 4;
$animation-duration: 20s; // можно менять

@mixin random-position {
  $max: ($container-size - ($pad * 2));
  $x: random($max) + $pad;
  $y: random($max) + $pad;
  transform: translate(#{$x}px, #{$y}px);
}

/* Базовый контейнер */
.illustration__container {
  position: relative;
  width: $container-size;
  height: $container-size;
  overflow: hidden;
  margin: 0 auto;
  
  filter: blur(75px)
}

/* Базовые фигуры */
.illustration__shape {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 1;
  will-change: transform, opacity;
  animation: move $animation-duration infinite ease-in-out;
}

/* Ключевые кадры. random() вычисляется при сборке. */
@for $i from 1 through 4 {
  @keyframes move-#{$i} {
    0%,100% { transform: translate(#{random(400)}px,#{random(400)}px); }
    25%     { transform: translate(#{random(400)}px,#{random(400)}px); }
    50%     { transform: translate(#{random(400)}px,#{random(400)}px); }
    75%     { transform: translate(#{random(400)}px,#{random(400)}px); }
  }
  .illustration__shape:nth-child(#{$i}) {
    animation: move-#{$i} 24s infinite ease-in-out;
  }
}

/* ---------------------------
   Вариант 1 — плавные крупные формы
   (circle, tall-rect, triangle, hexagon)
   --------------------------- */
.illustration__container--1 {
  .illustration__shape {
    /* shape 1 - circle */
    &:nth-child(1) {
      width: 160px;
      height: 160px;
      border-radius: 50%;
      background: linear-gradient(135deg, #2765F5, #44A0FF);
    }

    /* shape 2 - tall rounded rect */
    &:nth-child(2) {
      width: 140px;
      height: 290px;
      border-radius: 30px;
      background: linear-gradient(180deg, #FA4011, #FF7A4D);
      transform-origin: center;
    }

    /* shape 3 - triangle (point down) */
    &:nth-child(3) {
      width: 0;
      height: 0;
      border-left: 95px solid transparent;
      border-right: 95px solid transparent;
      border-bottom: 190px solid #7311FA;
      /* triangle is positioned by transform, so keep width/height 0 */
    }

    /* shape 4 - hexagon via clip-path */
    &:nth-child(4) {
      width: 280px;
      height: 130px;
      clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
      background: linear-gradient(90deg, #FA9911, #FFD07A);
    }

    /* общие задержки для варианта */
    @for $i from 1 through $num-shapes {
      &:nth-child(#{$i}) {
        animation-delay: ($i - 1) * -($animation-duration / $num-shapes);
      }
    }
  }
}

/* ---------------------------
   Вариант 2 — мягкие «блоб»-формы и ромб
   (blob, pill, rotated-rect, diamond)
   цвета отличные от варианта 1
   --------------------------- */
.illustration__container--2 {
  .illustration__shape {
    /* shape 1 - blob (big, high border-radius) */
    &:nth-child(1) {
      width: 220px;
      height: 180px;
      border-radius: 50% 40% 60% 50% / 55% 60% 40% 45%;
      background: linear-gradient(135deg, #00C2A8, #60F0D8);
      transform-origin: center;
    }

    /* shape 2 - pill horizontal */
    &:nth-child(2) {
      width: 300px;
      height: 90px;
      border-radius: 99px;
      background: linear-gradient(90deg, #FF4EB2, #FF8AD6);
    }

    /* shape 3 - rotated rounded rect */
    &:nth-child(3) {
      width: 180px;
      height: 120px;
      border-radius: 24px;
      background: linear-gradient(180deg, #3A3DFF, #7A7FFF);
      transform: rotate(20deg);
    }

    /* shape 4 - diamond using transform rotate on square */
    &:nth-child(4) {
      width: 160px;
      height: 160px;
      background: linear-gradient(135deg, #FFD400, #FFB84D);
      transform: rotate(45deg);
      border-radius: 12px;
    }

    @for $i from 1 through $num-shapes {
      &:nth-child(#{$i}) {
        animation-delay: ($i - 1) * -($animation-duration / $num-shapes);
      }
    }
  }
}

/* ---------------------------
   Вариант 3 — острые/геометрические формы
   (semi-circle, inverted-triangle, star-like polygon, slim-pill)
   цвета отличные от варианта 1 и 2
   --------------------------- */
.illustration__container--3 {
  .illustration__shape {
    /* shape 1 - semicircle (top) */
    &:nth-child(1) {
      width: 220px;
      height: 110px;
      border-top-left-radius: 110px;
      border-top-right-radius: 110px;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      background: linear-gradient(180deg, #8E44FF, #B76BFF);
    }

    /* shape 2 - inverted triangle (point up) */
    &:nth-child(2) {
      width: 0;
      height: 0;
      border-left: 120px solid transparent;
      border-right: 120px solid transparent;
      border-top: 210px solid #11C3FA;
    }

    /* shape 3 - star-ish polygon via clip-path */
    &:nth-child(3) {
      width: 200px;
      height: 200px;
      clip-path: polygon(
        50% 0%,
        61% 35%,
        98% 35%,
        68% 57%,
        79% 91%,
        50% 70%,
        21% 91%,
        32% 57%,
        2% 35%,
        39% 35%
      );
      background: linear-gradient(135deg, #FF6A00, #FFCF6A);
    }

    /* shape 4 - slim vertical pill */
    &:nth-child(4) {
      width: 80px;
      height: 320px;
      border-radius: 40px;
      background: linear-gradient(180deg, #00A86B, #60E3A8);
    }

    @for $i from 1 through $num-shapes {
      &:nth-child(#{$i}) {
        animation-delay: ($i - 1) * -($animation-duration / $num-shapes);
      }
    }
  }
}





.embed-responsive{
    position:relative;
    display:block;
    width:100%;
    padding:0;
    overflow:hidden
}
.embed-responsive::before{
    content:'';
    display:block;
    padding-top:56.25%
}
.embed-responsive img,.embed-responsive iframe,.embed-responsive video{
    position:absolute;
    top:0;
    bottom:0;
    left:0;
    width:100%;
    height:100%;
    border:0
}
.embed-responsive--21-9::before{
    padding-top:42.85714%
}
.embed-responsive--4-3::before{
    padding-top:75%
}
.embed-responsive--3-4::before{
    padding-top:130%
}
.embed-responsive--3-2::before{
    padding-top:66.66667%
}
.embed-responsive--9-16::before{
    padding-top:180%
}
.embed-responsive--16-9::before{
    padding-top:55.08%
}
.embed-responsive--1-1::before{
    padding-top:100%
}
.hashtag{
    display: flex;
    color:$primary;

    *:not(:last-child){
        margin-right: 12px;
    }
}



.section-texts{
    // display: flex;
    // flex-direction: column;
    
    & > *:not(:last-child){
        margin-bottom: 16px;
    }
}

.socials{
    display: flex;
    gap:24px;
    align-items: center;

    & li{
        width: 24px;
        height: 24px;
    }
}



.fade-out {
    opacity: 0 !important;
}

.fade-in {
    opacity: 1 !important;
}

.flex-between{
    display: flex;
    justify-content: space-between;
}
.flex-align-center{
    display: flex;
    align-items: center;
}
.marquee {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;

    &__inner {
        display: inline-block;
        animation: marquee 10s linear infinite;
    }
    &__inner span{
        margin-right: 128px;
        font-size: 96px;
        line-height: normal;
        @include breakpoint(mobile1){
            font-size: 48px;
        }
    }
}


@keyframes marquee {
    from { transform: translateX(-0.033%); }
    to   { transform: translateX(-33.333%); }
}